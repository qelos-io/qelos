name: Docker Release

on:
  workflow_run:
    workflows: ["Qelos CI/CD"]
    types:
      - completed
    branches: [ main ]

# Add permissions needed for GitHub Container Registry
permissions:
  contents: read
  packages: write

jobs:
  setup:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    outputs:
      services: '["admin", "auth", "assets", "content", "drafts", "gateway", "plugins", "secrets", "no-code", "ai"]'
    steps:
      - name: Set up services list
        run: echo "Services list prepared"

  docker-release:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.setup.outputs.services) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        if: ${{ !contains(github.event.workflow_run.event, 'pull_request') }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/qelos/${{ matrix.service }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch
            type=sha,format=short
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/${{ matrix.service }}
          push: ${{ !contains(github.event.workflow_run.event, 'pull_request') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
