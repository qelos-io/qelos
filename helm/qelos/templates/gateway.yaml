apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: {{ .Values.gateway.replicas }}
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
      annotations:
        # Service dependency checksums to force gateway restart when services change
        checksum/microservices-config: {{ include (print $.Template.BasePath "/microservices.yaml") . | sha256sum }}
        checksum/mongodb-config: {{ include (print $.Template.BasePath "/mongodb.yaml") . | sha256sum }}
        checksum/redis-config: {{ include (print $.Template.BasePath "/redis.yaml") . | sha256sum }}
        # This timestamp annotation forces pod recreation on helm upgrade
        rollme: {{ randAlphaNum 10 | quote }}
    spec:
      containers:
        - name: gateway
          image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}"
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: IP
              value: "0.0.0.0"
            - name: INTERNAL_SECRET
              value: {{ .Values.global.internalSecret }}
            - name: REDIS_URL
              value: {{ .Values.global.redis.host }}
            - name: ADMIN_PANEL_URL
              value: {{ .Values.admin.host }}
            - name: ADMIN_PANEL_PORT
              value: "{{ .Values.admin.port }}"
            - name: CONTENT_SERVICE_URL
              value: {{ .Values.content.host }}
            - name: CONTENT_SERVICE_PORT
              value: "{{ .Values.content.port }}"
            - name: AUTH_SERVICE_URL
              value: {{ .Values.auth.host }}
            - name: AUTH_SERVICE_PORT
              value: "{{ .Values.auth.port }}"
            - name: ASSETS_SERVICE_URL
              value: {{ .Values.assets.host }}
            - name: ASSETS_SERVICE_PORT
              value: "{{ .Values.assets.port }}"
            - name: DRAFTS_SERVICE_URL
              value: {{ .Values.drafts.host }}
            - name: DRAFTS_SERVICE_PORT
              value: "{{ .Values.drafts.port }}"
            - name: PLUGINS_SERVICE_URL
              value: {{ .Values.plugins.host }}
            - name: PLUGINS_SERVICE_PORT
              value: "{{ .Values.plugins.port }}"
            - name: NO_CODE_SERVICE_URL
              value: {{ .Values.nocode.host }}
            - name: NO_CODE_SERVICE_PORT
              value: "{{ .Values.nocode.port }}"
            - name: SECRETS_SERVICE_URL
              value: {{ .Values.secrets.host }}
            - name: SECRETS_SERVICE_PORT
              value: "{{ .Values.secrets.port }}"
            - name: AI_SERVICE_URL
              value: {{ .Values.ai.host }}
            - name: AI_SERVICE_PORT
              value: "{{ .Values.ai.port }}"
            - name: SHOW_LOGS
              value: "true"
            - name: BASIC_TENANT
              value: "{{ .Values.gateway.environment.BASIC_TENANT }}"
          resources:
            {{- toYaml .Values.gateway.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  labels:
    app: gateway
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
      nodePort: 30000
      protocol: TCP
      name: http
  selector:
    app: gateway
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gateway-service
                port:
                  number: 80
